name: End to End CI/CD for Book My Show Application

on:
  push:
    branches:
      - "master"
      - "task/**"
  pull_request:
    branches:
      - "master"
      - "task/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      is_push_image:
        description: "Do you want to push Docker image to Docker Hub ?"
        required: true
        default: false
        type: boolean
      is_deploy_image:
        description: "Do you want to deploy Docker image to AKS ?"
        required: true
        default: false
        type: boolean
      Docker_Image_Name:
        description: "Enter Docker Repository & Image Name, Eg: <dockerhub_repository_name>/<image_name>:<image_tag>"
        #required: true
        #default: "${{ github.repository }}:${{ github.ref_name }}"
        type: string

# The error occurs because the `id-token: write` permission is not enabled in the workflow.
# This permission is required for OIDC-based authentication when using the `Azure/login` action.
# Generally we face this error when we are using the `Azure/login` action in our workflow for deploying an application in AKS
permissions:
  id-token: write
  contents: read

jobs:
# Build & Push docker image to Docker Hub
  docker_build-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # - name: Set Docker Image Name
      #   id: set_image_name
      #   run: |
      #     if [ -z "${{ github.event.inputs.Docker_Image_Name }}" ]; then
      #      LOWERCASE_REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
      #      echo "LOWERCASE_REPO_NAME=$LOWERCASE_REPO_NAME" >> $GITHUB_ENV
      #       echo "DOCKER_IMAGE_NAME=$LOWERCASE_REPO_NAME:${{ github.ref_name }}" >> $GITHUB_ENV
      #     else
      #       echo "DOCKER_IMAGE_NAME=${{ github.event.inputs.Docker_Image_Name }}" >> $GITHUB_ENV
      #     fi

      - name: Set Docker Image Name
        id: set_image_name
        run: |
          if [ -z "${{ github.event.inputs.Docker_Image_Name }}" ]; then
           LOWERCASE_REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
           echo "LOWERCASE_REPO_NAME=$LOWERCASE_REPO_NAME" >> $GITHUB_ENV
            echo "DOCKER_IMAGE_NAME=$LOWERCASE_REPO_NAME:task1" >> $GITHUB_ENV
          else
            echo "DOCKER_IMAGE_NAME=${{ github.event.inputs.Docker_Image_Name }}" >> $GITHUB_ENV
          fi

      - name: Docker Build
        run: |
          docker build -t $DOCKER_IMAGE_NAME .
    # bookmyshow-app

      - name: Docker Push
        if: ${{ github.event.inputs.is_push_image == 'true' }}
        run: |
          docker push $DOCKER_IMAGE_NAME

      - name: Post-run step
        if: failure()
        run: |
          echo "Post-run step executed"
          ls -la
# This is a new comment added by the python script
# Dockerfile path: bookmyshow-app/Dockerfile